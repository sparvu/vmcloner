=head1 NAME

vmcloner - Virtual Machine Cloner, an automation test utility

=head1 DESCRIPTION

vmcloner is a script designed to help you create, start, stop and delete mass numbers of
virtual machines, Xen or KVM based. It is 'mostly automated', meaning that you have to 
do the groundwork first, and then your server will work with this script with minimal 
interference.

It is written in perl and makes extensive use of perl modules where available, and 
system calls where not.

This readme file is designed to be read on github. It is written using github's
own flavour of markdown.

=head1 COMPONENTS

vmcloner is avilable as a standalone Perl5 based script and some other utilities
needed to get started in VM creation and configuration.

=head2 Directory Structure

=over

=item base path

/opt/vmcloner

=item bin

binaries and scripts

=item etc

templates and config files

=item images

ISO's and saved images

=item logs

logs

=back

=head2 Utilities

=over

=item vmcloner

vmcloner script

=item create_image.sh

example commands for xen-create-image

=back

=head2 Required packages

These are the required Ubuntu based packages: thin-provisioning-tools libconfig-simple-perl 
libparallel-forkmanager-perl liblist-moreutils-perl libxen-4.3 xen-tools xen-hypervisor-4.3


=head2 Optional packages
Optional you will need the following packages: git-extras xen-tools
If you wish to use xen-create-image (check create_image.sh) debootstrap


=head2 Necessary configurations

* create the XEN Volume Group
  * set $vmVG (eg: VG01, XENVG) in vmcloner.conf
* create /dev/$vmVG/thinpool
  * create this LV as a thin pool (e.g. 250G) for VM's
  * ```example code here```
* create /dev/$vmVG/OPT for vmcloner to live in
  * mount on /opt/vmcloner (e.g. 250G)
* create the vm source lvol's using dd or ```your favourite tool here```
  * eg: precise-disk from precise-disk.img


=head2 ubuntu system options

* add atime to /, /boot, /opt
* add the following to /etc/rc.local (And set to 755)
/sbin/iptables --table nat --append POSTROUTING --out-interface eth0 -j MASQUERADE  
/sbin/iptables --append FORWARD --in-interface bridge0 -j ACCEPT  
mkdir -p /var/run/xen  


=head1 FREE SOFTWARE LICENSE

Copyright (c) 2013 SystemDataRecorder

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation; either version 2
 of the License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software Foundation,
 Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

 (http://www.gnu.org/copyleft/gpl.html)


=head1 TODO

- [x] Stabilize options (--start,--stop,--create,--delete,--templates)
- [x] fix thin handling via config options
- [x] work out why/how xen-4.x pygrub works properly and/or automate kernel config for templates
- [x] fix templates not to be .cfg but .template
- [] integrate pypxeboot from http://grid.ie/pypxeboot/ (v.0.0.3)

